name: "dev-toolkit"

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: "release tag e.g. 2025.01"
        default: "2025.01"
        required: true
  push:
    tags:
      - '*'

env:
  DOCKER_HUB_REPO: portainer/dev-toolkit
  IMAGE_TAG: ${{ github.event_name == 'push' && github.ref_name || inputs.release_tag }}

jobs:
  build_images:
    strategy:
      matrix:
        config:
          - { platform: linux, arch: amd64 }
          - { platform: linux, arch: arm64 }
    runs-on: ubuntu-latest
    steps:
      - name: "[preparation] checkout"
        uses: actions/checkout@v4.1.1

      - name: "[preparation] set up qemu"
        uses: docker/setup-qemu-action@v3.2.0

      - name: "[preparation] set up docker context for buildx"
        run: docker context create builders

      - name: "[preparation] set up docker buildx"
        uses: docker/setup-buildx-action@v3.10.0
        with:
          endpoint: builders
          driver-opts: image=moby/buildkit:v0.10.6

      - name: "[preparation] docker login"
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: "build and push image"
        uses: docker/build-push-action@v6.7.0
        with:
          context: .
          platforms: ${{ matrix.config.platform }}/${{ matrix.config.arch }}
          tags: ${{ env.DOCKER_HUB_REPO }}:${{ env.IMAGE_TAG }}-${{ matrix.config.platform }}-${{ matrix.config.arch }}
          sbom: false
          provenance: false
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=registry
          build-args: |
            BUILDKIT_PROGRESS=plain
          builder: builders

  build_manifests:
    needs: [build_images]
    runs-on: ubuntu-latest
    steps:
      - name: "[preparation] docker login"
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: "create and push multi-arch manifest"
        run: |
          docker manifest create \
            ${{ env.DOCKER_HUB_REPO }}:${{ env.IMAGE_TAG }} \
            ${{ env.DOCKER_HUB_REPO }}:${{ env.IMAGE_TAG }}-linux-amd64 \
            ${{ env.DOCKER_HUB_REPO }}:${{ env.IMAGE_TAG }}-linux-arm64
          docker manifest push ${{ env.DOCKER_HUB_REPO }}:${{ env.IMAGE_TAG }}